/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MatchesRouteImport } from './routes/matches'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MatchMatchIdRouteImport } from './routes/match.$matchId'
import { Route as TestMatchIdSayHiRouteImport } from './routes/test.$matchId.sayHi'
import { Route as MatchMatchIdSummaryRouteImport } from './routes/match.$matchId.summary'
import { Route as MatchMatchIdSetupRouteImport } from './routes/match.$matchId.setup'
import { Route as MatchMatchIdGameGameIdRouteImport } from './routes/match.$matchId.game.$gameId'

const MatchesRoute = MatchesRouteImport.update({
  id: '/matches',
  path: '/matches',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MatchMatchIdRoute = MatchMatchIdRouteImport.update({
  id: '/match/$matchId',
  path: '/match/$matchId',
  getParentRoute: () => rootRouteImport,
} as any)
const TestMatchIdSayHiRoute = TestMatchIdSayHiRouteImport.update({
  id: '/test/$matchId/sayHi',
  path: '/test/$matchId/sayHi',
  getParentRoute: () => rootRouteImport,
} as any)
const MatchMatchIdSummaryRoute = MatchMatchIdSummaryRouteImport.update({
  id: '/summary',
  path: '/summary',
  getParentRoute: () => MatchMatchIdRoute,
} as any)
const MatchMatchIdSetupRoute = MatchMatchIdSetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => MatchMatchIdRoute,
} as any)
const MatchMatchIdGameGameIdRoute = MatchMatchIdGameGameIdRouteImport.update({
  id: '/game/$gameId',
  path: '/game/$gameId',
  getParentRoute: () => MatchMatchIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/matches': typeof MatchesRoute
  '/match/$matchId': typeof MatchMatchIdRouteWithChildren
  '/match/$matchId/setup': typeof MatchMatchIdSetupRoute
  '/match/$matchId/summary': typeof MatchMatchIdSummaryRoute
  '/test/$matchId/sayHi': typeof TestMatchIdSayHiRoute
  '/match/$matchId/game/$gameId': typeof MatchMatchIdGameGameIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/matches': typeof MatchesRoute
  '/match/$matchId': typeof MatchMatchIdRouteWithChildren
  '/match/$matchId/setup': typeof MatchMatchIdSetupRoute
  '/match/$matchId/summary': typeof MatchMatchIdSummaryRoute
  '/test/$matchId/sayHi': typeof TestMatchIdSayHiRoute
  '/match/$matchId/game/$gameId': typeof MatchMatchIdGameGameIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/matches': typeof MatchesRoute
  '/match/$matchId': typeof MatchMatchIdRouteWithChildren
  '/match/$matchId/setup': typeof MatchMatchIdSetupRoute
  '/match/$matchId/summary': typeof MatchMatchIdSummaryRoute
  '/test/$matchId/sayHi': typeof TestMatchIdSayHiRoute
  '/match/$matchId/game/$gameId': typeof MatchMatchIdGameGameIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/matches'
    | '/match/$matchId'
    | '/match/$matchId/setup'
    | '/match/$matchId/summary'
    | '/test/$matchId/sayHi'
    | '/match/$matchId/game/$gameId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/matches'
    | '/match/$matchId'
    | '/match/$matchId/setup'
    | '/match/$matchId/summary'
    | '/test/$matchId/sayHi'
    | '/match/$matchId/game/$gameId'
  id:
    | '__root__'
    | '/'
    | '/matches'
    | '/match/$matchId'
    | '/match/$matchId/setup'
    | '/match/$matchId/summary'
    | '/test/$matchId/sayHi'
    | '/match/$matchId/game/$gameId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MatchesRoute: typeof MatchesRoute
  MatchMatchIdRoute: typeof MatchMatchIdRouteWithChildren
  TestMatchIdSayHiRoute: typeof TestMatchIdSayHiRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/matches': {
      id: '/matches'
      path: '/matches'
      fullPath: '/matches'
      preLoaderRoute: typeof MatchesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/match/$matchId': {
      id: '/match/$matchId'
      path: '/match/$matchId'
      fullPath: '/match/$matchId'
      preLoaderRoute: typeof MatchMatchIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test/$matchId/sayHi': {
      id: '/test/$matchId/sayHi'
      path: '/test/$matchId/sayHi'
      fullPath: '/test/$matchId/sayHi'
      preLoaderRoute: typeof TestMatchIdSayHiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/match/$matchId/summary': {
      id: '/match/$matchId/summary'
      path: '/summary'
      fullPath: '/match/$matchId/summary'
      preLoaderRoute: typeof MatchMatchIdSummaryRouteImport
      parentRoute: typeof MatchMatchIdRoute
    }
    '/match/$matchId/setup': {
      id: '/match/$matchId/setup'
      path: '/setup'
      fullPath: '/match/$matchId/setup'
      preLoaderRoute: typeof MatchMatchIdSetupRouteImport
      parentRoute: typeof MatchMatchIdRoute
    }
    '/match/$matchId/game/$gameId': {
      id: '/match/$matchId/game/$gameId'
      path: '/game/$gameId'
      fullPath: '/match/$matchId/game/$gameId'
      preLoaderRoute: typeof MatchMatchIdGameGameIdRouteImport
      parentRoute: typeof MatchMatchIdRoute
    }
  }
}

interface MatchMatchIdRouteChildren {
  MatchMatchIdSetupRoute: typeof MatchMatchIdSetupRoute
  MatchMatchIdSummaryRoute: typeof MatchMatchIdSummaryRoute
  MatchMatchIdGameGameIdRoute: typeof MatchMatchIdGameGameIdRoute
}

const MatchMatchIdRouteChildren: MatchMatchIdRouteChildren = {
  MatchMatchIdSetupRoute: MatchMatchIdSetupRoute,
  MatchMatchIdSummaryRoute: MatchMatchIdSummaryRoute,
  MatchMatchIdGameGameIdRoute: MatchMatchIdGameGameIdRoute,
}

const MatchMatchIdRouteWithChildren = MatchMatchIdRoute._addFileChildren(
  MatchMatchIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MatchesRoute: MatchesRoute,
  MatchMatchIdRoute: MatchMatchIdRouteWithChildren,
  TestMatchIdSayHiRoute: TestMatchIdSayHiRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
